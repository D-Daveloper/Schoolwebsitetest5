<%- include("partials/header_admin")  %>
<style>
    body{
        background-image: none;
        background-color: black;
        color: white;
    }
    
    nav{
        background-color: #417690;
        width: 100%;
    } 
</style>    
<div class="wrapper">
    <section class="add-section">
        <h1>
            collections
        </h1>
        <ul class="add-ul">
            <li class="db"> <span class="collections"><a href="/admin/viewEvents">events</a></span>
                <div>
                    <a href="/addEvent">
                        <p>
                            <i class="fa-solid fa-plus"></i>
                            add
                        </p>
                    </a> 
                </div>
            </li>
            <li class="db"> <span class="collections"><a href="/admin/viewTestimonial">testimonials</a></span>
                <div>
                    <a href="/admin/addTestimonial">
                        <p>
                            <i class="fa-solid fa-plus"></i>
                            add
                        </p>
                    </a> 
                </div>
            </li>           
            <li class="db"> <span class="collections"><a href="/admin/viewEmails">emails</a></span>
                <div>
                    <a href="/admin/messageEmails">
                        <p>
                            <i class="fa-solid fa-pencil"></i>
                            Message
                        </p>
                    </a> 
                </div>
            </li>
        </ul>
    </section>
    <section class="add-form">
        <h1>Add Event</h1>
        <form action="/addEvent" method="POST" enctype="multipart/form-data" id="addEventForm">
            <div class="form">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required><br>
                
            </div>

            <div class="form">
                <label for="description">Description:</label>
                <textarea id="description" name="description" rows="4" required></textarea><br>
            </div>

            <div class="form">
                <label for="date">Date:</label>
                <input class="date" type="date" id="date" name="date" required><br>
            </div>

            <div class="form">
                <label for="eventImage">Image:</label>
                <input type="file" id="eventImage" name="eventImage" accept="image/*" required><br>
            </div>

            <div class="button">
                <button type="submit">Add Event</button>
                <% if (locals.error) { %>
                    <div class="alert alert-danger p-2 rounded-sm mb-0" style="margin-left: 10px;" role="alert">
                      <%= error %>
                    </div>
                  <% }else if (locals.message){ %>
                  <div class="alert alert-success p-2 rounded-sm mb-0" style="margin-left: 10px;" role="alert">
                    <%= message %>
                  </div> 
                  <% } %>        
                  <!-- <div class="alert alert-success mb-0 ml-1 mr-10 p-2 rounded-sm" style="margin-left: 10px;" role="alert">
                    geugugcwsbjvebcavuvcuwvsdugfbrusvfedusuvcuapuhvdgardhpug
                  </div>        -->
            </div>
        </form>
    </section>
</div>
<script>
    // document.getElementById('addEventForm').addEventListener('submit', function(event) {
    // event.preventDefault(); // Prevent default form submission

    // const form = document.getElementById('addEventForm');
    // console.log(form);
    // const formData = new FormData(form); // Create FormData object from the form
    // console.log(formData)
    // // Output the form data for debugging purposes
    // for (let pair of formData.entries()) {
    //     console.log(pair[0] + ': ' + pair[1]);
    // }

    // Example of using fetch to send a POST request to the server
    document.addEventListener("DOMContentLoaded", () => {       
    // const show_message = document.querySelector(".alert");

    // function show() {
    //     show_message.classList.add("show-successfull");
    // };

    // function hide() {
    //     show_message.classList.remove("show-successfull");
    // };

    // setTimeout(show, 100);
    // setTimeout(hide, 1000);
    // fetch('/addEvent', {
    //     method: 'POST',
    //     body: formData // Send FormData directly without JSON.stringify
    // })
    // .then(response => {
    //     if (response.ok) {
    //         // Clear input fields after successful submission
    //         form.reset();
    //     } else {
    //         throw new Error('Failed to subscribe');
    //     }
    // })
    // .catch(error => {
    //     console.error('Error:', error);
    //     alert('Failed to subscribe: ' + error.message);
    // });

    // if (locals.error || locals.message ){
        setTimeout(() => {
        const errorMessage = document.querySelector(".alert");
        if (errorMessage) {
          errorMessage.style.display = "none";
        }
      }, 5000); 
    // }
});
</script>
<%- include("partials/adminFooter") %>